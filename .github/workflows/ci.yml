name: CI
permissions:
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: [ '1.23.x', '1.24.x' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true

      - name: Go mod download
        run: go mod download

      - name: Verify go.mod is tidy
        run: |
          go mod tidy
          git diff --exit-code -- go.mod go.sum || (echo 'go.mod/go.sum not tidy. Run `go mod tidy` and commit.' && exit 1)

      - name: Build
        run: |
          GOOS=linux CGO_ENABLED=0 go build -ldflags "-X github.com/khulnasoft-lab/kube-bench/cmd.KubeBenchVersion=dev-ci" -o kube-bench .

      - name: Test
        env:
          # Optional token to increase GitHub API limits in updater tests when using 'latest' resolution.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: go test ./... -v

      - name: Lint (golangci-lint)
        if: ${{ matrix.go-version == '1.24.x' }}
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m
